# the current home for this version is https://github.com/EduardoMDSousa 
# https://discord.gg/JxUjzxK9
# EduardoSousa#7556 at Discord 

[gcode_macro _Probe_Dock_Servo_Variables]
variable_servo_name:                      'probe_dock_servo'    # the name in your [servo] section of printer.cfg
variable_servo_extended_angle:            70
variable_servo_retracted_angle:           180                # default to initial_angle in [servo] section
gcode:

#[calibrate_docklocation_z]
#speed:                       50     # default 50
##  the toolhead will start at docklocation_z_max and move down to
##  docklocation_z_min to find the correct docklocation_z
#docklocation_z_max:          30
#docklocation_z_min:          8       
##  The magnet will pull the dock up when doing a CALIBRATE_DOCKLOCATION_Z. 
##  The docklocation_z_offset will compensate for that by setting the docklocation_z 
##  slightly lower
#docklocation_z_offset:       -2 

[gcode_macro find_docklocation_z]
gcode:
    {% set docklocation_x = printer["gcode_macro _User_Variables"].docklocation_x %}
    {% set docklocation_y = printer["gcode_macro _User_Variables"].docklocation_y %}
    {% set dockmove_x = printer["gcode_macro _User_Variables"].dockmove_x|default(0) %}
    {% set dockmove_y = printer["gcode_macro _User_Variables"].dockmove_y|default(0) %}
    {% set release_feedrate = printer["gcode_macro _User_Variables"].release_feedrate|default(1000) %}
    extend_probe_dock
    CALIBRATE_DOCKLOCATION_Z X={docklocation_x} Y={docklocation_y}
    G0 X{docklocation_x|int + dockmove_x|int} Y{docklocation_y|int + dockmove_y|int} F{release_feedrate}
    { action_respond_info("find_sdocklocation_z: " + printer.calibrate_docklocation_z.docklocation_z|string) }
    
[gcode_macro set_docklocation_z]
gcode:
    SET_GCODE_VARIABLE MACRO=_User_Variables VARIABLE=docklocation_z VALUE={printer.calibrate_docklocation_z.docklocation_z}
    { action_respond_info("set_docklocation_z: " + printer.calibrate_docklocation_z.docklocation_z|string) }
    
## Wrapper macro to get around Jinja expansion order issue
[gcode_macro auto_set_docklocation_z]
gcode:
    find_docklocation_z
    set_docklocation_z

[gcode_macro read_docklocation_z]
gcode:
    {% set docklocation_z = printer["gcode_macro _User_Variables"].docklocation_z %}
    { action_respond_info("current docklocation_z: " + docklocation_z|string) }
    
###########################
# Extend Probe Dock Routine
[gcode_macro extend_probe_dock]
description: Extend Klicky Probe Dock
gcode:
    # Get probe dock servo variables
    {% set servo_name = printer["gcode_macro _Probe_Dock_Servo_Variables"].servo_name|default('probe_dock_servo') %}
    
    {% set initial_angle = printer['configfile'].config["servo " + servo_name]['initial_angle']|int %}
    
    {% if 'servo_extended_angle' in printer["gcode_macro _Probe_Dock_Servo_Variables"] %}
        {% set SEA = printer["gcode_macro _Probe_Dock_Servo_Variables"].servo_extended_angle | int %}
    {% else %}
        {% set SEA = initial_angle + 180 %}
    {% endif %}
        
    { action_respond_info("Extending Probe Dock: Angle = " + SEA|string) }
    SET_SERVO SERVO={servo_name} ANGLE={SEA}
    M400      # wait for the move to finish

############################
# Retract Probe Dock Routine
[gcode_macro retract_probe_dock]
description: Retract Klicky Probe Dock
gcode:
    # Get probe dock servo variables
    {% set servo_name = printer["gcode_macro _Probe_Dock_Servo_Variables"].servo_name|default('probe_dock_servo') %}
    
    {% set initial_angle = printer['configfile'].config["servo " + servo_name]['initial_angle']|int %}
    
    {% if 'servo_retracted_angle' in printer["gcode_macro _Probe_Dock_Servo_Variables"] %}
        {% set SRA = printer["gcode_macro _Probe_Dock_Servo_Variables"].servo_retracted_angle | int %}
    {% else %}
        {% set SRA = initial_angle %}
    {% endif %}
    
    { action_respond_info("Retracting Probe Dock: Angle = " + SRA|string) }
    SET_SERVO SERVO={servo_name} ANGLE={SRA}
    M400      # wait for the move to finish

[gcode_macro vibrate_brush]
description: [COUNT=xxx] (default is 30 times)
gcode:
    {% set count = params.COUNT|default(20)|int %}
    {% set servo_name = printer["gcode_macro _Probe_Dock_Servo_Variables"].servo_name|default('probe_dock_servo') %}
    {% set servo_extended_angle = printer["gcode_macro _Probe_Dock_Servo_Variables"].servo_extended_angle | int %}
    {% set initial_brush_angle = servo_extended_angle - 5 | int %}
    {% for iters in range(1, count) %}
        {% set brush_angle = initial_brush_angle + 20 * (iters % 2) | int %}
        SET_SERVO SERVO={servo_name} ANGLE={brush_angle}
    {% endfor %}
    
[gcode_macro servo_stress_test]
description: [COUNT=xxx] (default is 10 times)
gcode:
    {% set count = params.COUNT|default(10)|int %}
    {% for iters in range(1, count) %}
        extend_probe_dock
        retract_probe_dock
    {% endfor %}
    
[gcode_macro docking_stress_test]
description: [COUNT=xxx] (default is 10 times)

variable_prep_spd_xy:        3600	         ; Travel speed along x and y-axis in mm/min.

gcode:
    {% set count = params.COUNT|default(10)|int %}
    {% set Bx = printer.configfile.config["stepper_x"]["position_endstop"]|float %}
    {% set By = printer.configfile.config["stepper_y"]["position_endstop"]|float %}
        
    {% for iters in range(1, count) %}
        dock_probe
        # move to a random location
        {% set x_pos = range(0, Bx|int)|random| int %}
        {% set y_pos = range(0, By|int)|random| int %}
        G0 X{x_pos} Y{x_pos} F{prep_spd_xy}
        
        attach_probe
        # move to a random location
        {% set x_pos = range(0, Bx|int)|random| int %}
        {% set y_pos = range(0, By|int)|random| int %}
        G0 X{x_pos} Y{x_pos} F{prep_spd_xy}
    {% endfor %}